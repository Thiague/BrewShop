{"ast":null,"code":"import _objectSpread from \"/Users/tfcerqueira/Desktop/brewShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/tfcerqueira/Desktop/brewShop/src/pages/Home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: []\n    };\n\n    this.handleAddProduct = id => {\n      const addToCartRequest = this.props.addToCartRequest;\n      addToCartRequest(id);\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('products');\n    const data = response.data.map(product => _objectSpread({}, product, {\n      priceFormatted: formatPrice(product.price)\n    }));\n    this.setState({\n      products: data\n    });\n  }\n\n  render() {\n    const products = this.state.products;\n    const amount = this.props.amount;\n    return React.createElement(ProductList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, products.map(product => React.createElement(\"li\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.image,\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, product.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, product.priceFormatted), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleAddProduct(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(MdAddShoppingCart, {\n      size: 16,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" \", amount[product.id] || 0), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Adicionar ao carrinho\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/tfcerqueira/Desktop/brewShop/src/pages/Home/index.js"],"names":["React","Component","connect","bindActionCreators","MdAddShoppingCart","formatPrice","api","CartActions","ProductList","Home","state","products","handleAddProduct","id","addToCartRequest","props","componentDidMount","response","get","data","map","product","priceFormatted","price","setState","render","amount","image","title","mapStateToProps","cart","reduce","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kCAA7B;AAEA,SAASC,WAAT,QAA4B,UAA5B;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BS,KAD2B,GACnB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADmB;;AAAA,SAgB3BC,gBAhB2B,GAgBRC,EAAE,IAAI;AAAA,YACfC,gBADe,GACM,KAAKC,KADX,CACfD,gBADe;AAGvBA,MAAAA,gBAAgB,CAACD,EAAD,CAAhB;AACD,KApB0B;AAAA;;AAK3B,QAAMG,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAJ,CAAQ,UAAR,CAAvB;AAEA,UAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,OAAO,sBACjCA,OADiC;AAEpCC,MAAAA,cAAc,EAAEjB,WAAW,CAACgB,OAAO,CAACE,KAAT;AAFS,MAAzB,CAAb;AAKA,SAAKC,QAAL,CAAc;AAAEb,MAAAA,QAAQ,EAAEQ;AAAZ,KAAd;AACD;;AAQDM,EAAAA,MAAM,GAAI;AAAA,UACAd,QADA,GACa,KAAKD,KADlB,CACAC,QADA;AAAA,UAEAe,MAFA,GAEW,KAAKX,KAFhB,CAEAW,MAFA;AAIR,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIf,QAAQ,CAACS,GAAT,CAAaC,OAAO,IACpB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACR,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAEQ,OAAO,CAACM,KAAlB;AAAyB,MAAA,GAAG,EAAEN,OAAO,CAACO,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASP,OAAO,CAACO,KAAjB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,OAAO,CAACC,cAAf,CAHA,EAKA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKV,gBAAL,CAAsBS,OAAO,CAACR,EAA9B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAE,EAAzB;AAA6B,MAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OACgDa,MAAM,CAACL,OAAO,CAACR,EAAT,CAAN,IAAsB,CADtE,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALF,CALA,CADA,CADJ,CADF;AAmBD;;AA7C0B;;AAgD7B,MAAMgB,eAAe,GAAGnB,KAAK,KAAK;AAChCgB,EAAAA,MAAM,EAAEhB,KAAK,CAACoB,IAAN,CAAWC,MAAX,CAAkB,CAACL,MAAD,EAASL,OAAT,KAAqB;AAC7CK,IAAAA,MAAM,CAACL,OAAO,CAACR,EAAT,CAAN,GAAqBQ,OAAO,CAACK,MAA7B;AAEA,WAAOA,MAAP;AAED,GALO,EAKL,EALK;AADwB,CAAL,CAA7B;;AASA,MAAMM,kBAAkB,GAAGC,QAAQ,IACjC9B,kBAAkB,CAACI,WAAD,EAAc0B,QAAd,CADpB;;AAGA,eAAe/B,OAAO,CACpB2B,eADoB,EAEpBG,kBAFoB,CAAP,CAGbvB,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\n\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  state = {\n    products: [],\n  };\n\n  async componentDidMount() {\n    const response = await api.get('products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price)\n    }));\n\n    this.setState({ products: data });\n  }\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  }\n\n  render () {\n    const { products } = this.state;\n    const { amount } = this.props;\n\n    return (\n      <ProductList>\n        { products.map(product => (\n          <li key={product.id}>\n          <img src={product.image} alt={product.title}/>\n          <strong>{product.title}</strong>\n          <span>{product.priceFormatted}</span>\n\n          <button type=\"button\" onClick={() => this.handleAddProduct(product.id)}>\n            <div>\n              <MdAddShoppingCart size={16} color=\"#FFF\" /> {amount[product.id] || 0}\n            </div>\n\n            <span>Adicionar ao carrinho</span>\n          </button>\n          </li>  \n        )) }                        \n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n\n    return amount;\n    \n  }, {}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps\n)(Home);\n"]},"metadata":{},"sourceType":"module"}